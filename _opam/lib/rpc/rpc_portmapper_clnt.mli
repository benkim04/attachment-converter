(************************************************************
 * WARNING!
 *
 * This file is generated by ocamlrpcgen from the source file
 * rpc_portmapper.x
 *
 ************************************************************)
module Make'PMAP(U'C:Rpc_client_pre.USE_CLIENT) : sig
  module V2 : sig
    open Rpc_portmapper_aux
    type t = U'C.t
    val _program : Rpc_program.t
    val pmapproc_null :
            U'C.t ->
            t_PMAP'V2'pmapproc_null'arg ->
            t_PMAP'V2'pmapproc_null'res
    val pmapproc_null'async :
            U'C.t ->
            t_PMAP'V2'pmapproc_null'arg ->
            ((unit -> t_PMAP'V2'pmapproc_null'res) -> unit) ->
            unit
    val pmapproc_set :
            U'C.t ->
            t_PMAP'V2'pmapproc_set'arg ->
            t_PMAP'V2'pmapproc_set'res
    val pmapproc_set'async :
            U'C.t ->
            t_PMAP'V2'pmapproc_set'arg ->
            ((unit -> t_PMAP'V2'pmapproc_set'res) -> unit) ->
            unit
    val pmapproc_unset :
            U'C.t ->
            t_PMAP'V2'pmapproc_unset'arg ->
            t_PMAP'V2'pmapproc_unset'res
    val pmapproc_unset'async :
            U'C.t ->
            t_PMAP'V2'pmapproc_unset'arg ->
            ((unit -> t_PMAP'V2'pmapproc_unset'res) -> unit) ->
            unit
    val pmapproc_getport :
            U'C.t ->
            t_PMAP'V2'pmapproc_getport'arg ->
            t_PMAP'V2'pmapproc_getport'res
    val pmapproc_getport'async :
            U'C.t ->
            t_PMAP'V2'pmapproc_getport'arg ->
            ((unit -> t_PMAP'V2'pmapproc_getport'res) -> unit) ->
            unit
    val pmapproc_dump :
            U'C.t ->
            t_PMAP'V2'pmapproc_dump'arg ->
            t_PMAP'V2'pmapproc_dump'res
    val pmapproc_dump'async :
            U'C.t ->
            t_PMAP'V2'pmapproc_dump'arg ->
            ((unit -> t_PMAP'V2'pmapproc_dump'res) -> unit) ->
            unit
    val pmapproc_callit :
            U'C.t ->
            t_PMAP'V2'pmapproc_callit'arg ->
            t_PMAP'V2'pmapproc_callit'res
    val pmapproc_callit'async :
            U'C.t ->
            t_PMAP'V2'pmapproc_callit'arg ->
            ((unit -> t_PMAP'V2'pmapproc_callit'res) -> unit) ->
            unit
    
  end
  module V3 : sig
    open Rpc_portmapper_aux
    type t = U'C.t
    val _program : Rpc_program.t
    val rpcbproc_null :
            U'C.t ->
            t_PMAP'V3'rpcbproc_null'arg ->
            t_PMAP'V3'rpcbproc_null'res
    val rpcbproc_null'async :
            U'C.t ->
            t_PMAP'V3'rpcbproc_null'arg ->
            ((unit -> t_PMAP'V3'rpcbproc_null'res) -> unit) ->
            unit
    val rpcbproc_set :
            U'C.t ->
            t_PMAP'V3'rpcbproc_set'arg ->
            t_PMAP'V3'rpcbproc_set'res
    val rpcbproc_set'async :
            U'C.t ->
            t_PMAP'V3'rpcbproc_set'arg ->
            ((unit -> t_PMAP'V3'rpcbproc_set'res) -> unit) ->
            unit
    val rpcbproc_unset :
            U'C.t ->
            t_PMAP'V3'rpcbproc_unset'arg ->
            t_PMAP'V3'rpcbproc_unset'res
    val rpcbproc_unset'async :
            U'C.t ->
            t_PMAP'V3'rpcbproc_unset'arg ->
            ((unit -> t_PMAP'V3'rpcbproc_unset'res) -> unit) ->
            unit
    val rpcbproc_getaddr :
            U'C.t ->
            t_PMAP'V3'rpcbproc_getaddr'arg ->
            t_PMAP'V3'rpcbproc_getaddr'res
    val rpcbproc_getaddr'async :
            U'C.t ->
            t_PMAP'V3'rpcbproc_getaddr'arg ->
            ((unit -> t_PMAP'V3'rpcbproc_getaddr'res) -> unit) ->
            unit
    val rpcbproc_dump :
            U'C.t ->
            t_PMAP'V3'rpcbproc_dump'arg ->
            t_PMAP'V3'rpcbproc_dump'res
    val rpcbproc_dump'async :
            U'C.t ->
            t_PMAP'V3'rpcbproc_dump'arg ->
            ((unit -> t_PMAP'V3'rpcbproc_dump'res) -> unit) ->
            unit
    val rpcbproc_callit :
            U'C.t ->
            t_PMAP'V3'rpcbproc_callit'arg ->
            t_PMAP'V3'rpcbproc_callit'res
    val rpcbproc_callit'async :
            U'C.t ->
            t_PMAP'V3'rpcbproc_callit'arg ->
            ((unit -> t_PMAP'V3'rpcbproc_callit'res) -> unit) ->
            unit
    val rpcbproc_gettime :
            U'C.t ->
            t_PMAP'V3'rpcbproc_gettime'arg ->
            t_PMAP'V3'rpcbproc_gettime'res
    val rpcbproc_gettime'async :
            U'C.t ->
            t_PMAP'V3'rpcbproc_gettime'arg ->
            ((unit -> t_PMAP'V3'rpcbproc_gettime'res) -> unit) ->
            unit
    val rpcbproc_uaddr2taddr :
            U'C.t ->
            t_PMAP'V3'rpcbproc_uaddr2taddr'arg ->
            t_PMAP'V3'rpcbproc_uaddr2taddr'res
    val rpcbproc_uaddr2taddr'async :
            U'C.t ->
            t_PMAP'V3'rpcbproc_uaddr2taddr'arg ->
            ((unit -> t_PMAP'V3'rpcbproc_uaddr2taddr'res) -> unit) ->
            unit
    val rpcbproc_taddr2uaddr :
            U'C.t ->
            t_PMAP'V3'rpcbproc_taddr2uaddr'arg ->
            t_PMAP'V3'rpcbproc_taddr2uaddr'res
    val rpcbproc_taddr2uaddr'async :
            U'C.t ->
            t_PMAP'V3'rpcbproc_taddr2uaddr'arg ->
            ((unit -> t_PMAP'V3'rpcbproc_taddr2uaddr'res) -> unit) ->
            unit
    
  end
  module V4 : sig
    open Rpc_portmapper_aux
    type t = U'C.t
    val _program : Rpc_program.t
    val rpcbproc_null :
            U'C.t ->
            t_PMAP'V4'rpcbproc_null'arg ->
            t_PMAP'V4'rpcbproc_null'res
    val rpcbproc_null'async :
            U'C.t ->
            t_PMAP'V4'rpcbproc_null'arg ->
            ((unit -> t_PMAP'V4'rpcbproc_null'res) -> unit) ->
            unit
    val rpcbproc_set :
            U'C.t ->
            t_PMAP'V4'rpcbproc_set'arg ->
            t_PMAP'V4'rpcbproc_set'res
    val rpcbproc_set'async :
            U'C.t ->
            t_PMAP'V4'rpcbproc_set'arg ->
            ((unit -> t_PMAP'V4'rpcbproc_set'res) -> unit) ->
            unit
    val rpcbproc_unset :
            U'C.t ->
            t_PMAP'V4'rpcbproc_unset'arg ->
            t_PMAP'V4'rpcbproc_unset'res
    val rpcbproc_unset'async :
            U'C.t ->
            t_PMAP'V4'rpcbproc_unset'arg ->
            ((unit -> t_PMAP'V4'rpcbproc_unset'res) -> unit) ->
            unit
    val rpcbproc_getaddr :
            U'C.t ->
            t_PMAP'V4'rpcbproc_getaddr'arg ->
            t_PMAP'V4'rpcbproc_getaddr'res
    val rpcbproc_getaddr'async :
            U'C.t ->
            t_PMAP'V4'rpcbproc_getaddr'arg ->
            ((unit -> t_PMAP'V4'rpcbproc_getaddr'res) -> unit) ->
            unit
    val rpcbproc_dump :
            U'C.t ->
            t_PMAP'V4'rpcbproc_dump'arg ->
            t_PMAP'V4'rpcbproc_dump'res
    val rpcbproc_dump'async :
            U'C.t ->
            t_PMAP'V4'rpcbproc_dump'arg ->
            ((unit -> t_PMAP'V4'rpcbproc_dump'res) -> unit) ->
            unit
    val rpcbproc_bcast :
            U'C.t ->
            t_PMAP'V4'rpcbproc_bcast'arg ->
            t_PMAP'V4'rpcbproc_bcast'res
    val rpcbproc_bcast'async :
            U'C.t ->
            t_PMAP'V4'rpcbproc_bcast'arg ->
            ((unit -> t_PMAP'V4'rpcbproc_bcast'res) -> unit) ->
            unit
    val rpcbproc_gettime :
            U'C.t ->
            t_PMAP'V4'rpcbproc_gettime'arg ->
            t_PMAP'V4'rpcbproc_gettime'res
    val rpcbproc_gettime'async :
            U'C.t ->
            t_PMAP'V4'rpcbproc_gettime'arg ->
            ((unit -> t_PMAP'V4'rpcbproc_gettime'res) -> unit) ->
            unit
    val rpcbproc_uaddr2taddr :
            U'C.t ->
            t_PMAP'V4'rpcbproc_uaddr2taddr'arg ->
            t_PMAP'V4'rpcbproc_uaddr2taddr'res
    val rpcbproc_uaddr2taddr'async :
            U'C.t ->
            t_PMAP'V4'rpcbproc_uaddr2taddr'arg ->
            ((unit -> t_PMAP'V4'rpcbproc_uaddr2taddr'res) -> unit) ->
            unit
    val rpcbproc_taddr2uaddr :
            U'C.t ->
            t_PMAP'V4'rpcbproc_taddr2uaddr'arg ->
            t_PMAP'V4'rpcbproc_taddr2uaddr'res
    val rpcbproc_taddr2uaddr'async :
            U'C.t ->
            t_PMAP'V4'rpcbproc_taddr2uaddr'arg ->
            ((unit -> t_PMAP'V4'rpcbproc_taddr2uaddr'res) -> unit) ->
            unit
    val rpcbproc_getversaddr :
            U'C.t ->
            t_PMAP'V4'rpcbproc_getversaddr'arg ->
            t_PMAP'V4'rpcbproc_getversaddr'res
    val rpcbproc_getversaddr'async :
            U'C.t ->
            t_PMAP'V4'rpcbproc_getversaddr'arg ->
            ((unit -> t_PMAP'V4'rpcbproc_getversaddr'res) -> unit) ->
            unit
    val rpcbproc_indirect :
            U'C.t ->
            t_PMAP'V4'rpcbproc_indirect'arg ->
            t_PMAP'V4'rpcbproc_indirect'res
    val rpcbproc_indirect'async :
            U'C.t ->
            t_PMAP'V4'rpcbproc_indirect'arg ->
            ((unit -> t_PMAP'V4'rpcbproc_indirect'res) -> unit) ->
            unit
    val rpcbproc_getaddrlist :
            U'C.t ->
            t_PMAP'V4'rpcbproc_getaddrlist'arg ->
            t_PMAP'V4'rpcbproc_getaddrlist'res
    val rpcbproc_getaddrlist'async :
            U'C.t ->
            t_PMAP'V4'rpcbproc_getaddrlist'arg ->
            ((unit -> t_PMAP'V4'rpcbproc_getaddrlist'res) -> unit) ->
            unit
    val rpcbproc_getstat :
            U'C.t ->
            t_PMAP'V4'rpcbproc_getstat'arg ->
            t_PMAP'V4'rpcbproc_getstat'res
    val rpcbproc_getstat'async :
            U'C.t ->
            t_PMAP'V4'rpcbproc_getstat'arg ->
            ((unit -> t_PMAP'V4'rpcbproc_getstat'res) -> unit) ->
            unit
    
  end
  
end


